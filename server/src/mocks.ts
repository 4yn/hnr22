import { CellData } from "./types";

const mockStore: Array<CellData> = [
  {
    room: "0001",
    secret: "sy",
    idx: 1,
    code: "%load_ext pyopticon",
    ok: true,
    stdout: "",
    stderr: "",
    outputs: [],
    timestamp: "2022-01-08T01:43:36.564Z",
  },
  {
    room: "0001",
    secret: "sy",
    idx: 2,
    code: "raise ValueError()",
    ok: false,
    stdout: "",
    stderr:
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)\n\u001b[0;32m/tmp/ipykernel_7656/1518464500.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\n\u001b[0;31mValueError\u001b[0m: \n",
    outputs: [],
    timestamp: "2022-01-08T01:43:50.660Z",
  },
  {
    room: "0001",
    secret: "sy",
    idx: 3,
    code: "import matplotlib.pyplot as plt",
    ok: true,
    stdout: "",
    stderr: "",
    outputs: [],
    timestamp: "2022-01-08T01:48:10.660Z",
  },
  {
    room: "0001",
    secret: "sy",
    idx: 4,
    code: 'print("abc")',
    ok: true,
    stdout: "abc\n",
    stderr: "",
    outputs: [],
    timestamp: "2022-01-08T01:53:55.660Z",
  },
  {
    room: "0001",
    secret: "sy",
    idx: 5,
    code: "12 + 23",
    ok: true,
    stdout: "",
    stderr: "",
    outputs: [
      {
        "text/plain": "35",
      },
    ],
    timestamp: "2022-01-08T01:54:02.660Z",
  },
  {
    room: "0001",
    secret: "sy",
    idx: 6,
    code: "fig = plt.figure(figsize=(8, 5))\nplt.scatter([0, 1, 2], [2, 0, 1])\nfig = plt.figure(figsize=(8, 5))\nplt.scatter([0, 1, 2], [2, 1, 0])\nNone",
    ok: true,
    stdout: "",
    stderr: "",
    outputs: [
      {
        "text/plain": "<Figure size 576x360 with 1 Axes>",
        "image/png":
          "",
      },
      {
        "text/plain": "<Figure size 576x360 with 1 Axes>",
        "image/png":
          "",
      },
    ],
    timestamp: "2022-01-08T02:10:00.660Z",
  },
  {
    room: "0001",
    secret: "sy",
    idx: 7,
    code: "%matplotlib?",
    ok: true,
    stdout: "",
    stderr: "",
    outputs: [],
    timestamp: "2022-01-08T02:11:12.660Z",
  },
  {
    room: "0001",
    secret: "sy",
    idx: 8,
    code: "%matplotlib -l",
    ok: true,
    stdout:
      "Available matplotlib backends: ['tk', 'gtk', 'gtk3', 'gtk4', 'wx', 'qt4', 'qt5', 'qt6', 'qt', 'osx', 'nbagg', 'notebook', 'agg', 'svg', 'pdf', 'ps', 'inline', 'ipympl', 'widget']\n",
    stderr: "",
    outputs: [],
    timestamp: "2022-01-08T02:12:13.660Z",
  },
  {
    room: "0001",
    secret: "sy",
    idx: 9,
    code: "import pandas as pd",
    ok: true,
    stdout: "",
    stderr: "",
    outputs: [],
    timestamp: "2022-01-08T02:14:10.660Z",
  },
  {
    room: "0001",
    secret: "sy",
    idx: 10,
    code: 'pd.DataFrame({"x": [1,2,3]})',
    ok: true,
    stdout: "",
    stderr: "",
    outputs: [
      {
        "text/plain": "   x\n0  1\n1  2\n2  3",
        "text/html":
          '<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border="1" class="dataframe">\n  <thead>\n    <tr style="text-align: right;">\n      <th></th>\n      <th>x</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n    </tr>\n  </tbody>\n</table>\n</div>',
      },
    ],
    timestamp: "2022-01-08T02:15:34.660Z",
  },
  {
    room: "0001",
    secret: "sy",
    idx: 11,
    code: "raise ValueError()",
    ok: false,
    stdout: "",
    stderr:
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)\n\u001b[0;32m/tmp/ipykernel_7656/1518464500.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\n\u001b[0;31mValueError\u001b[0m: \n",
    outputs: [],
    timestamp: "2022-01-08T02:16:12.660Z",
  },
  {
    room: "0001",
    secret: "person",
    idx: 1,
    code: "%load_ext pyopticon",
    ok: true,
    stdout: "",
    stderr: "",
    outputs: [],
    timestamp: "2022-01-08T02:18:12.660Z",
  },
  {
    room: "0001",
    secret: "person",
    idx: 2,
    code: "import matplotlib.pyplot as plt",
    ok: true,
    stdout: "",
    stderr: "",
    outputs: [],
    timestamp: "2022-01-08T02:18:30.660Z",
  },
  {
    room: "0001",
    secret: "person",
    idx: 3,
    code: 'print("abc")',
    ok: true,
    stdout: "abc\n",
    stderr: "",
    outputs: [],
    timestamp: "2022-01-08T02:18:50.660Z",
  },
  {
    room: "0001",
    secret: "person",
    idx: 4,
    code: "12 + 23",
    ok: true,
    stdout: "",
    stderr: "",
    outputs: [
      {
        "text/plain": "35",
      },
    ],
    timestamp: "2022-01-08T02:19:20.660Z",
  },
  {
    room: "0001",
    secret: "person",
    idx: 5,
    code: "fig = plt.figure(figsize=(8, 5))\nplt.scatter([0, 1, 2], [2, 0, 1])\nfig = plt.figure(figsize=(8, 5))\nplt.scatter([0, 1, 2], [2, 1, 0])\nNone",
    ok: true,
    stdout: "",
    stderr: "",
    outputs: [
      {
        "text/plain": "<Figure size 576x360 with 1 Axes>",
        "image/png":
          "",
      },
      {
        "text/plain": "<Figure size 576x360 with 1 Axes>",
        "image/png":
          "",
      },
    ],
    timestamp: "2022-01-08T02:19:30.660Z",
  },
];

export default mockStore;
